@page "/matchmaking"

@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@implements IAsyncDisposable

<PageTitle>Matchmaking</PageTitle>

<h1>Matchmaking</h1>
<AuthorizeView>
    <Authorized>
        <button class="btn btn-primary" @onclick="() => InitiateMatchmaking()" disabled="@(!IsConnected)">Search for Game!</button>
    </Authorized>
    <NotAuthorized>
        <a href="/Identity/Account/Login">Login</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private HubConnection? hubConnection;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("MatchmakingHub"))
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<string>("InitiateMatch", (url) => NavigateToGamePage(url));

        await hubConnection.StartAsync();
    }

    public bool IsConnected => hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }

    private void NavigateToGamePage(string url)
    {
        NavigationManager.NavigateTo(url);
    }

    private async void InitiateMatchmaking()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("InitiateMatchmaking");
        }
    }
}
